// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Json__Decode from "rescript-json/src/Json__Decode.mjs";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";
import IsomorphicFetch from "isomorphic-fetch";

var ParseError = /* @__PURE__ */Caml_exceptions.create("Figma.Request.ParseError");

function MakeFigmaRequest($$Request) {
  var request = function (param) {
    var url = new URL(Curry._1($$Request.getEndpoint, undefined), "https://api.figma.com").toString();
    var params = {
      method: "get",
      headers: {
        "x-figma-token": process.env.FIGMA_API_TOKEN
      }
    };
    return IsomorphicFetch(url, params).then(function (prim) {
                  return prim.json();
                }).then(function (json) {
                return Json__Decode.decodeValue(json, $$Request.fromJson);
              });
  };
  var requestWithArgs = function (args) {
    var url = new URL(Curry._1($$Request.getEndpoint, args), "https://api.figma.com").toString();
    var params = {
      method: "get",
      headers: {
        "x-figma-token": process.env.FIGMA_API_TOKEN
      }
    };
    return IsomorphicFetch(url, params).then(function (prim) {
                  return prim.json();
                }).then(function (json) {
                return Json__Decode.decodeValue(json, $$Request.fromJson);
              });
  };
  return {
          request: request,
          requestWithArgs: requestWithArgs
        };
}

function getEndpoint(param) {
  return "/v1/files/" + process.env.FIGMA_FILE_ID + "/nodes?ids=" + process.env.FIGMA_ICON_FRAME_ID;
}

var component = Json__Decode.map(Json__Decode.field("name", Json__Decode.string), (function (name) {
        return {
                name: name
              };
      }));

var node = Json__Decode.map(Json__Decode.field("components", Json__Decode.dict(component)), (function (components) {
        return {
                components: components
              };
      }));

var fromJson = Json__Decode.map(Json__Decode.field("nodes", Json__Decode.dict(node)), (function (nodes) {
        return {
                nodes: nodes
              };
      }));

var QueryComponentsOrInstancesType = {
  getEndpoint: getEndpoint,
  fromJson: fromJson
};

function request(param) {
  var url = new URL(getEndpoint(undefined), "https://api.figma.com").toString();
  var params = {
    method: "get",
    headers: {
      "x-figma-token": process.env.FIGMA_API_TOKEN
    }
  };
  return IsomorphicFetch(url, params).then(function (prim) {
                return prim.json();
              }).then(function (json) {
              return Json__Decode.decodeValue(json, fromJson);
            });
}

function requestWithArgs(args) {
  var url = new URL(getEndpoint(args), "https://api.figma.com").toString();
  var params = {
    method: "get",
    headers: {
      "x-figma-token": process.env.FIGMA_API_TOKEN
    }
  };
  return IsomorphicFetch(url, params).then(function (prim) {
                return prim.json();
              }).then(function (json) {
              return Json__Decode.decodeValue(json, fromJson);
            });
}

var QueryComponentsOrInstances = {
  request: request,
  requestWithArgs: requestWithArgs
};

function getEndpoint$1(icons) {
  var ids = encodeURIComponent(icons.map(function (param) {
              return param[0];
            }).join(","));
  return "/v1/images/" + process.env.FIGMA_FILE_ID + "?ids=" + ids + "&format=svg";
}

var fromJson$1 = Json__Decode.map(Json__Decode.field("images", Json__Decode.dict(Json__Decode.string)), (function (images) {
        return {
                images: images
              };
      }));

var QueryImagesType = {
  getEndpoint: getEndpoint$1,
  fromJson: fromJson$1
};

function request$1(param) {
  var url = new URL(getEndpoint$1(undefined), "https://api.figma.com").toString();
  var params = {
    method: "get",
    headers: {
      "x-figma-token": process.env.FIGMA_API_TOKEN
    }
  };
  return IsomorphicFetch(url, params).then(function (prim) {
                return prim.json();
              }).then(function (json) {
              return Json__Decode.decodeValue(json, fromJson$1);
            });
}

function requestWithArgs$1(args) {
  var url = new URL(getEndpoint$1(args), "https://api.figma.com").toString();
  var params = {
    method: "get",
    headers: {
      "x-figma-token": process.env.FIGMA_API_TOKEN
    }
  };
  return IsomorphicFetch(url, params).then(function (prim) {
                return prim.json();
              }).then(function (json) {
              return Json__Decode.decodeValue(json, fromJson$1);
            });
}

var QueryImages = {
  request: request$1,
  requestWithArgs: requestWithArgs$1
};

var $$Request = {
  ParseError: ParseError,
  MakeFigmaRequest: MakeFigmaRequest,
  QueryComponentsOrInstancesType: QueryComponentsOrInstancesType,
  QueryComponentsOrInstances: QueryComponentsOrInstances,
  QueryImagesType: QueryImagesType,
  QueryImages: QueryImages
};

export {
  $$Request ,
}
/* component Not a pure module */
